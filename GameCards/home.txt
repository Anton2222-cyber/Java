В КОММЕНТАРИИ В MyStat ПРИ ЗАГРУЗКЕ Д.З.
УКАЗЫВАТЬ НА КАКОЙ БАЛЛ ВЫ ПРЕТЕНДУЕТЕ!!!

На 9 баллов:
Ответить письменно на вопросы(TO-DO) в файле local.Outer
outerField = "new value";//+   почему эту переменную можно изменить?
localField = "new value";//-   почему эту переменную нельзя изменить?

На 12 баллов:
Ответить на предыдщие вопросы.
Как обойти проблему?
Что если нам нужно использовать изменненое значение
этой переменной в localeMethod?
Предложить три варианта. Ну, или хотя-бы два.


outerField - це приватне поле класу Outer, яке має значення "outerField".
Це поле доступне для зміни з методу methodLocale() внутрішнього локального класу Local.
Такий доступ можливий, оскільки внутрішній локальний клас має
 доступ до всіх полів та методів зовнішнього класу Outer, навіть приватних.
localField - це локальна змінна у методі outerMethod().
У внутрішньому локальному класі Local спроба змінити значення localField призведе до помилки компіляції.
 Це відбувається через те, що в Java локальні змінні, що використовуються у локальних класах,
  повинні бути ефективно фіналізованими (тобто не можуть змінюватися після присвоєння значення).

Можна обійти цю проблему за допомогою:
1.Використання фінального масиву або об'єкту-обгортки:
Можна створити фінальний масив або об'єкт-обгортку, який містить цю змінну,
і змінювати значення у цьому масиві або об'єкті.
2.Використання глобальної змінної:
Можна зробити змінну членом класу замість локальної змінної.
Це дозволить звертатися до неї з будь-якого методу класу.
3.Використання глобальної змінної:
Можна зробити змінну членом класу замість локальної змінної.
Це дозволить звертатися до неї з будь-якого методу класу.


